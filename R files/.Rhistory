left_join(pres_votes, by = c("state" = "state", "county" = "county")) %>%
mutate(pres_vote_share = total_votes.x / current_votes) %>% filter(percent > 95) %>%
distinct(county, state, .keep_all = TRUE)
comp_senate_df <- senate_df %>% select(county, state, sen_vote_share) %>%
left_join(pres_df %>% select(county, state, pres_vote_share),
by = c("state" = "state", "county" = "county"))
sen_county <- lm(sen_vote_share ~ pres_vote_share, data = comp_senate_df)
summary(sen_county)
ggplot(comp_senate_df, aes  (x = pres_vote_share, y = sen_vote_share, label = state)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "grey"),
legend.key = element_rect(fill="transparent", colour=NA),
legend.position = "none") +
labs(x = "Dem Presidential Vote Share", y="Dem Senate Vote Share", title = "Presidential vs Senate Democratic Vote Share")
pick_cand <- senate_results %>% filter(party == "DEM") %>%
group_by(state, candidate, county) %>%
summarise_at(vars(total_votes), funs(mean)) %>%
ungroup() %>%
group_by(state, candidate) %>%
summarise_at(vars(total_votes), funs(sum)) %>%
filter(total_votes > 10000)
cand_list <- unique(pick_cand$candidate)
senate_df <- senate_results %>% filter(party == "DEM", candidate %in% cand_list) %>%
left_join(senate_votes, by =c("state" = "state", "county" = "county")) %>%
mutate(sen_vote_share = total_votes.x / current_votes)  %>%
group_by(state, county, candidate) %>%
summarise_at(vars(sen_vote_share), funs(mean(., na.rm=TRUE)))
pres_df <- pres_results %>% filter(party == "DEM") %>%
left_join(pres_votes, by = c("state" = "state", "county" = "county")) %>%
mutate(pres_vote_share = total_votes.x / current_votes) %>% filter(percent > 95) %>%
distinct(county, state, .keep_all = TRUE)
comp_senate_df <- senate_df %>% select(county, state, sen_vote_share) %>%
left_join(pres_df %>% select(county, state, pres_vote_share),
by = c("state" = "state", "county" = "county"))
sen_county <- lm(sen_vote_share ~ pres_vote_share, data = comp_senate_df)
summary(sen_county)
ggplot(comp_senate_df, aes  (x = pres_vote_share, y = sen_vote_share, label = state)) +
geom_point() +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "grey"),
legend.key = element_rect(fill="transparent", colour=NA),
legend.position = "none") +
labs(x = "Dem Presidential Vote Share", y="Dem Senate Vote Share", title = "Presidential vs Senate Democratic Vote Share")
pick_cand <- senate_results %>% filter(party == "DEM") %>%
group_by(state, candidate, county) %>%
summarise_at(vars(total_votes), funs(mean)) %>%
ungroup() %>%
group_by(state, candidate) %>%
summarise_at(vars(total_votes), funs(sum)) %>%
filter(total_votes > 50000)
cand_list <- unique(pick_cand$candidate)
senate_df <- senate_results %>% filter(party == "DEM", candidate %in% cand_list) %>%
left_join(senate_votes, by =c("state" = "state", "county" = "county")) %>%
mutate(sen_vote_share = total_votes.x / current_votes)  %>%
group_by(state, county, candidate) %>%
summarise_at(vars(sen_vote_share), funs(mean(., na.rm=TRUE)))
pres_df <- pres_results %>% filter(party == "DEM") %>%
left_join(pres_votes, by = c("state" = "state", "county" = "county")) %>%
mutate(pres_vote_share = total_votes.x / current_votes) %>% filter(percent > 95) %>%
distinct(county, state, .keep_all = TRUE)
comp_senate_df <- senate_df %>% select(county, state, sen_vote_share) %>%
left_join(pres_df %>% select(county, state, pres_vote_share),
by = c("state" = "state", "county" = "county"))
ggplot(comp_senate_df, aes  (x = pres_vote_share, y = sen_vote_share, label = state)) +
geom_point() +
facet_wrap(facets = state ~.) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "grey"),
legend.key = element_rect(fill="transparent", colour=NA),
legend.position = "none") +
labs(x = "Dem Presidential Vote Share", y="Dem Senate Vote Share", title = "Presidential vs Senate Democratic Vote Share")
senate_df[senate_df$state == "Massachussettes"]
senate_df[senate_df$state == "Massachusetts"]
senate_df %>% filter(state == "Massachusetts")
senate_df %>% filter(state == "Delaware")
senate_results %>% filter(state == "Delaware")
senate_results %>% filter(state == "Massachusettes", party == "DEM")
senate_df %>% filter(state == "Massachusetts")
comp_senate_df %>% filter(state == "Massachusetts")
plot_df <- comp_senate_df %>% filter(state != "Deleware", state != "Massachusetts")
ggplot(plot_df , aes  (x = pres_vote_share, y = sen_vote_share, label = state)) +
geom_point() +
facet_wrap(facets = state ~.) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "grey"),
legend.key = element_rect(fill="transparent", colour=NA),
legend.position = "none") +
labs(x = "Biden Presidential Vote Share",
y="Dempcrat Senate Vote Share",
title = "Presidential vs Senate Democratic Vote Share by County")
plot_df <- comp_senate_df %>% filter(state != "Deleware") %>% filter(state != "Massachusetts")
ggplot(plot_df , aes  (x = pres_vote_share, y = sen_vote_share, label = state)) +
geom_point() +
facet_wrap(facets = state ~.) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "grey"),
legend.key = element_rect(fill="transparent", colour=NA),
legend.position = "none") +
labs(x = "Biden Presidential Vote Share",
y="Dempcrat Senate Vote Share",
title = "Presidential vs Senate Democratic Vote Share by County")
plot_df <- comp_senate_df %>%
filter(state != "Deleware")
ggplot(plot_df , aes  (x = pres_vote_share, y = sen_vote_share, label = state)) +
geom_point() +
facet_wrap(facets = state ~.) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "grey"),
legend.key = element_rect(fill="transparent", colour=NA),
legend.position = "none") +
labs(x = "Biden Presidential Vote Share",
y="Dempcrat Senate Vote Share",
title = "Presidential vs Senate Democratic Vote Share by County")
plot_df <- comp_senate_df %>%
filter(state != "Delaware") %>%
filter(state != "Massachusetts")
ggplot(plot_df , aes  (x = pres_vote_share, y = sen_vote_share, label = state)) +
geom_point() +
facet_wrap(facets = state ~.) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "grey"),
legend.key = element_rect(fill="transparent", colour=NA),
legend.position = "none") +
labs(x = "Biden Presidential Vote Share",
y="Dempcrat Senate Vote Share",
title = "Presidential vs Senate Democratic Vote Share by County")
max(plot_df$sen_vote_share)
plot_df <- comp_senate_df %>%
filter(state != "Delaware") %>%
filter(state != "Massachusetts") %>%
drop_na()
ggplot(plot_df , aes  (x = pres_vote_share, y = sen_vote_share, label = state)) +
geom_point() +
facet_wrap(facets = state ~.) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "grey"),
legend.key = element_rect(fill="transparent", colour=NA),
legend.position = "none") +
labs(x = "Biden Presidential Vote Share",
y="Dempcrat Senate Vote Share",
title = "Presidential vs Senate Democratic Vote Share by County")
max(plot_df$sen_vote_share)
max(plot_df$pres_vote_share)
senate_df <- senate_results %>% filter(party == "DEM", candidate %in% cand_list) %>%
left_join(senate_votes, by =c("state" = "state", "county" = "county")) %>%
mutate(sen_vote_share = total_votes.x / current_votes)  %>% rm_na()
senate_df <- senate_results %>% filter(party == "DEM", candidate %in% cand_list) %>%
left_join(senate_votes, by =c("state" = "state", "county" = "county")) %>%
mutate(sen_vote_share = total_votes.x / current_votes)  %>% drop_na()
view(senate_df)
max(senate_df$sen_vote_share)
temp <- senate_df %>% filter(state == "New Jersey")
view(temp)
temp <- senate_results $>$ filter(state == "New Jersey")
temp <- senate_results %>% filter(state == "New Jersey")
view(temp)
library(tidyverse)
library(ggplot2)
library(usmap)
library(janitor)
library(usmap)
library(data.table)
library(geofacet) ## map-shaped grid of ggplots
library(statebins)
setwd("~/Desktop/Gov 1347/Blog/R files")
demo_df <- read_csv("../Data/demographic_data_209.csv")
demo_df
voting_df <- read_csv("../Data/county_results_2020.csv")
demo_df <- read_csv("../Data/demographic_data_209.csv")
voting_df <- read_csv("../Data/county_results_2020.csv")
demo_df <- read_csv("../Data/demographic_data_209.csv") %>% select_if(~ !any(is.na(.)))
View(demo_df)
demo_df <- read_csv("../Data/demographic_data_209.csv")
View(demo_df)
old_votiing_df <- read_csv("../Data/countypres_2000-2016.csv")
View(old_votiing_df)
old_votiing_df <- read_csv("../Data/countypres_2000-2016.csv") %>% filter(year == 2016)
View(old_votiing_df)
View(old_votiing_df)
View(old_votiing_df)
old_voting_wide <- old_voting_df %>% filter(party == "democrat") %>%
left_join(old_voting_df %>% filter(party == "republican"),
by = c("state" =  "state", "FIPS" = "FIPS", "county" = "county"))
old_voting_df <- read_csv("../Data/countypres_2000-2016.csv") %>% filter(year == 2016)
old_voting_wide <- old_voting_df %>% filter(party == "democrat") %>%
left_join(old_voting_df %>% filter(party == "republican"),
by = c("state" =  "state", "FIPS" = "FIPS", "county" = "county"))
view(old_voting_wide)
old_voting_wide <- old_voting_df %>% filter(party == "democrat") %>%
left_join(old_voting_df %>% filter(party == "republican"),
by = c("state" =  "state", "FIPS" = "FIPS", "county" = "county")) %>%
select(state, FIPS, candidatevotes.x, candidatevotes.y, totalvotes.x) %>%
mutate(dem_percent = candidatevotes.x / totalvotes.x,
rep_percent = candidatevotes.y/totalvotes.x)
colnames(old_voting_wide) <- c("state", "fips", "dem_votes", "rep_votes",
"total_votes", "dem_percent", "rep_percent")
view(old_voting_wide)
View(voting_df)
View(voting_df)
voting_df <- read_csv("../Data/county_results_2020.csv", header = TRUE)
voting_df <- read_csv("../Data/county_results_2020.csv")
View(voting_df)
voting_df <- voting_df %>% row_to_names(row_number = 1) %>%
select(fips, totalvote, vote1, vote2) %>%
mutate(dem_percent = vote1/totalvote, rep_percent = vote2/totalvote)
voting_df <- voting_df %>% row_to_names(row_number = 1)
voting_df
typeof(voting_df)
voting_df <- as.data.frame(voting_df)
voting_df <- as.data.frame(voting_df) %>%
select(fips, totalvote, vote1, vote2) %>%
mutate(dem_percent = vote1/totalvote, rep_percent = vote2/totalvote)
View(voting_df)
sapply(voting_df, mode)
sapply(voting_df, class)
voting_df <- voting_df %>% select(fips, totalvote, vote1, vote2) %>%
mutate(dem_percent = vote1/totalvote, rep_percent = vote2/totalvote)
voting_df <- voting_df %>% row_to_names(row_number = 1)
voting_df$totalvote <- as.numeric(as.character(voting_df$totalvote))
voting_df$vote1 <- as.numeric(as.character(voting_df$vote1))
voting_df$vote2 <- as.numeric(as.character(voting_df$vote2))
voting_df <- read_csv("../Data/county_results_2020.csv")
voting_df <- read_csv("../Data/county_results_2020.csv") %>% row_to_names(row_number = 1)
voting_df$totalvote <- as.numeric(as.character(voting_df$totalvote))
voting_df$vote1 <- as.numeric(as.character(voting_df$vote1))
voting_df$vote2 <- as.numeric(as.character(voting_df$vote2))
voting_df <- voting_df %>% select(fips, totalvote, vote1, vote2) %>%
mutate(dem_percent = vote1/totalvote, rep_percent = vote2/totalvote)
view(voting_df)
full_df <- voting_df %>% left_join(old_voting_wide, by = c("fips" = "fips"))
old_voting_wide$fips <- as.character(old_voting_wide$fips)
full_df <- voting_df %>% left_join(old_voting_wide, by = c("fips" = "fips"))
view(full_df)
View(full_df)
colnames(full_df) <- c("fips", "dem_2020_share", "rep_2020_share", "dem_2016_share", "rep_2016_share", "state")
full_df
full_df <- voting_df %>% left_join(old_voting_wide, by = c("fips" = "fips")) %>%
select(fips, dem_percent.x, rep_percent.x, dem_percent.y, rep_percent.y, state)
full_df
colnames(full_df) <- c("fips", "dem_2020_share", "rep_2020_share", "dem_2016_share", "rep_2016_share", "state")
full_df
full_df <- full_df %>% left_join(demo_df, by = c("fips" = "fips"))
demo_df$fips <- as.character(demo_df$fips)
full_df <- full_df %>% left_join(demo_df, by = c("fips" = "fips"))
full_df
View(demo_df)
demo_df <- demo_df %>% select(fips, median_age, female_percentage,
population, life_expectancy, pct_none, pct_hs, pct_bachelors,
pct_black, pct_asian, pct_hispanic, pct_non_hispanic_white,
median_household_income, pct_rural, pop_density)
full_df <- full_df %>% left_join(demo_df, by = c("fips" = "fips"))
View(full_df)
demo_df <- read_csv("../Data/demographic_data_209.csv")
old_voting_df <- read_csv("../Data/countypres_2000-2016.csv") %>% filter(year == 2016)
voting_df <- read_csv("../Data/county_results_2020.csv") %>% row_to_names(row_number = 1)
old_voting_wide <- old_voting_df %>% filter(party == "democrat") %>%
left_join(old_voting_df %>% filter(party == "republican"),
by = c("state" =  "state", "FIPS" = "FIPS", "county" = "county")) %>%
select(state, FIPS, candidatevotes.x, candidatevotes.y, totalvotes.x) %>%
mutate(dem_percent = candidatevotes.x / totalvotes.x,
rep_percent = candidatevotes.y/totalvotes.x)
colnames(old_voting_wide) <- c("state", "fips", "dem_votes", "rep_votes",
"total_votes", "dem_percent", "rep_percent")
old_voting_wide$fips <- as.character(old_voting_wide$fips)
voting_df$totalvote <- as.numeric(as.character(voting_df$totalvote))
voting_df$vote1 <- as.numeric(as.character(voting_df$vote1))
voting_df$vote2 <- as.numeric(as.character(voting_df$vote2))
voting_df <- voting_df %>% select(fips, totalvote, vote1, vote2) %>%
mutate(dem_percent = vote1/totalvote, rep_percent = vote2/totalvote)
demo_df$fips <- as.character(demo_df$fips)
demo_df <- demo_df %>% select(fips, median_age, female_percentage,
population, life_expectancy, pct_none, pct_hs, pct_bachelors,
pct_black, pct_asian, pct_hispanic, pct_non_hispanic_white,
median_household_income, pct_rural, pop_density)
full_df <- voting_df %>% left_join(old_voting_wide, by = c("fips" = "fips")) %>%
select(fips, dem_percent.x, rep_percent.x, dem_percent.y, rep_percent.y, state)
colnames(full_df) <- c("fips", "dem_2020_share", "rep_2020_share", "dem_2016_share", "rep_2016_share", "state")
full_df <- full_df %>% left_join(demo_df, by = c("fips" = "fips"))
view(full_df)
view(full_df)
full_df <- full_df %>% mutate(dem_change = dem_2016_share - dem_2020_share,
rep_change = rep_2016_share - rep_2020_share)
ggplot(full_df, aes(x = pop_density, y = dem_change, label = state), alpha = 0.5) +
geom_point()
ggplot(full_df, aes(x = pop_density, y = dem_change, label = state), alpha = 0.5) +
geom_point() +
scale_x_continuous(trans='log10')
?geom_smooth
ggplot(full_df, aes(x = pop_density, y = dem_change, label = state), alpha = 0.5) +
geom_point() +
scale_x_continuous(trans='log10') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "grey"),
legend.key = element_rect(fill="transparent", colour=NA),
legend.position = "none") +
labs(x = "Log(Population Density), ",
y="Change in Democrat Vote Share",
title = "Change in Democrat Vote Share by Population Density") +
geom_smooth(se = FALSE, method = "lm")
ggplot(full_df, aes(x = pop_density, y = dem_change, label = state), alpha = 0.5) +
geom_point() +
scale_x_continuous(trans='log10') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "grey"),
legend.key = element_rect(fill="transparent", colour=NA),
legend.position = "none") +
labs(x = "Log(Population Density) in Log(People/Sq Mile)",
y="Change in Democrat Vote Share",
title = "Change in Democrat Vote Share by Population Density") +
geom_smooth(se = FALSE, method = "lm")
full_df <- full_df %>% mutate(dem_change = dem_2020_share - dem_2016_share,
rep_change = rep_2020_share - rep_2016_share)
ggplot(full_df, aes(x = pop_density, y = dem_change, label = state), alpha = 0.5) +
geom_point() +
scale_x_continuous(trans='log10') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "grey"),
legend.key = element_rect(fill="transparent", colour=NA),
legend.position = "none") +
labs(x = "Log(Population Density) in Log(People/Sq Mile)",
y="Change in Democrat Vote Share",
title = "Change in Democrat Vote Share by Population Density") +
geom_smooth(se = FALSE, method = "lm")
ggplot(full_df, aes(x = median_household_income, y = dem_change, label = state), alpha = 0.5) +
geom_point() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "grey"),
legend.key = element_rect(fill="transparent", colour=NA),
legend.position = "none") +
labs(x = "Median Household Income",
y="Change in Democrat Vote Share from 2016 to 2020",
title = "Change in Democrat Vote Share by Population Density") +
geom_smooth(se = FALSE, method = "lm")
ggplot(full_df, aes(x = median_household_income, y = dem_change, label = state), alpha = 0.5) +
geom_point() +
scale_x_continuous(trans="log10")
ggplot(full_df, aes(x = median_household_income, y = dem_change, label = state), alpha = 0.5) +
geom_point() +
scale_x_continuous(trans="log10")
ggplot(full_df, aes(x = median_household_income, y = dem_change, label = state), alpha = 0.5) +
geom_point() +
scale_x_continuous(trans="log10")+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "grey"),
legend.key = element_rect(fill="transparent", colour=NA),
legend.position = "none") +
labs(x = "Median Household Income",
y="Change in Democrat Vote Share from 2016 to 2020",
title = "Change in Democrat Vote Share by Population Density") +
geom_smooth(se = FALSE, method = "lm")
View(full_df)
ed <- read_csv("../Data/Education.csv")
ggplot(full_df, aes(x = pct_rural, y = dem_change, label = state), alpha = 0.5) +
geom_point() +
scale_x_continuous(trans="log10")+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "grey"),
legend.key = element_rect(fill="transparent", colour=NA),
legend.position = "none") +
labs(x = "Median Household Income",
y="Change in Democrat Vote Share from 2016 to 2020",
title = "Change in Democrat Vote Share by Population Density") +
geom_smooth(se = FALSE, method = "lm")
ggplot(full_df, aes(x = pct_rural, y = dem_change, label = state), alpha = 0.5) +
geom_point() +
scale_x_continuous(trans="log10")+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "grey"),
legend.key = element_rect(fill="transparent", colour=NA),
legend.position = "none") +
labs(x = "Percent Rural",
y="Change in Democrat Vote Share from 2016 to 2020",
title = "Change in Democrat Vote Share by Percent Rural") +
geom_smooth(se = FALSE, method = "lm")
ggplot(full_df, aes(x = pct_rural, y = dem_change, label = state), alpha = 0.5) +
geom_point() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "grey"),
legend.key = element_rect(fill="transparent", colour=NA),
legend.position = "none") +
labs(x = "Percent Rural",
y="Change in Democrat Vote Share from 2016 to 2020",
title = "Change in Democrat Vote Share by Percent Rural") +
geom_smooth(se = FALSE, method = "lm")
dem_den <-ggplot(full_df, aes(x = pop_density, y = dem_change, label = state), alpha = 0.5) +
geom_point() +
scale_x_continuous(trans='log10') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "grey"),
legend.key = element_rect(fill="transparent", colour=NA),
legend.position = "none") +
labs(x = "Log(Population Density) in Log(People/Sq Mile)",
y="Change in Democrat Vote Share from 2016 to 2020",
title = "Change in Democrat Vote Share by Population Density") +
geom_smooth(se = FALSE, method = "lm")
rep_den <-ggplot(full_df, aes(x = pop_density, y = rep_change, label = state), alpha = 0.5) +
geom_point() +
scale_x_continuous(trans='log10') +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "grey"),
legend.key = element_rect(fill="transparent", colour=NA),
legend.position = "none") +
labs(x = "Log(Population Density) in Log(People/Sq Mile)",
y="Change in Republican Vote Share from 2016 to 2020",
title = "Change in Republican Vote Share by Population Density") +
geom_smooth(se = FALSE, method = "lm")
density_plot <- gridExtra::grid.arrange(dem_den, rep_den, ncol = 2)
base_lm <- lm(dem_change ~ pct_rural + median_household_income+pop_density, data = full_df)
summary(base_lm)
base_lm <- lm(dem_change ~ pct_rural + log(median_household_income)+log(pop_density), data = full_df)
summary(base_lm)
?correlation
??correlation
corr(full_df$pct_rural, full_df$pop_density)
cor(full_df$pct_rural, full_df$pop_density)
?cor
cor(full_df$pct_rural, full_df$pop_density, na.rm = TRUE)
summary(base_lm)
view(full_df)
install.packages("starbility")
?log
all_three_lm <- lm(dem_change ~ pct_rural + log10(median_household_income)+log10(pop_density), data = full_df)
summary(all_three_lm)
income_lm <- lm(dem_change ~ log10(median_household_income), data = full_df)
pct_rural_lm <- lm(dem_change ~ pct_rural, data = full_df)
pop_density_lm <- lm(dem_change ~ log10(pop_density), data = full_df)
income_lm <- lm(dem_change ~ log10(median_household_income), data = full_df)
ggplot(full_df, aes(x = median_household_income, y = pop_density, label = state), alpha = 0.5) +
geom_point() +
scale_x_continuous(trans="log10")+
scale_y_continuous(trans="log10")+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "grey"),
legend.key = element_rect(fill="transparent", colour=NA),
legend.position = "none") +
labs(x = "Log(Median Household Income)",
y="Log(Population Density) in Log(People/Sq Mile)",
title = "Household Income Against Population Density") +
geom_smooth(se = FALSE, method = "lm")
ggplot(full_df, aes(x = pct_rural, y = dem_change, label = state), alpha = 0.5) +
geom_point() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "grey"),
legend.key = element_rect(fill="transparent", colour=NA),
legend.position = "none") +
labs(x = "Percent Rural",
y="Change in Democrat Vote Share from 2016 to 2020",
title = "Change in Democrat Vote Share by Percent Rural") +
geom_smooth(se = FALSE, method = "lm")
summary(pct_rural_lm)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
install.packages("sjPlot")
pop_density_lm$coefficients
pop_density_lm$coefficients[2]
?round
round(pop_density_lm$coefficients[2]*0.01, digits = 2)
round(pop_density_lm$coefficients[2]*0.01, digits = 6)
pop_density_lm$coefficients[2]
View(full_df)
View(full_df)
hist(full_df$dem_change)
